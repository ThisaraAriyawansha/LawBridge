{"ast":null,"code":"var _jsxFileName = \"D:\\\\NIBM\\\\Project\\\\React\\\\Legal Case Management System\\\\LawBridge\\\\src\\\\components\\\\ReceiveMessage.js\",\n  _s = $RefreshSig$();\n// ReceiveMessage.js\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ReceiveMessage = () => {\n  _s();\n  const [receivedMessage, setReceivedMessage] = useState('');\n  useEffect(() => {\n    const fetchMessage = async () => {\n      try {\n        const response = await axios.get('http://localhost:5000/api/receive-message');\n        const encryptedMessage = response.data.encryptedMessage.split(',').map(Number);\n        const decryptedData = await window.crypto.subtle.decrypt({\n          name: 'AES-GCM'\n        }, 'secretKey', Uint8Array.from(encryptedMessage));\n        const decryptedMessage = new TextDecoder().decode(decryptedData);\n        setReceivedMessage(decryptedMessage);\n      } catch (error) {\n        console.error('Error fetching message:', error);\n      }\n    };\n    fetchMessage();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: receivedMessage ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Received Message\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: receivedMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No message received\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n};\n_s(ReceiveMessage, \"95xoHorqp+uE+35Q8gqwZpv0G1o=\");\n_c = ReceiveMessage;\nexport default ReceiveMessage;\nvar _c;\n$RefreshReg$(_c, \"ReceiveMessage\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","ReceiveMessage","_s","receivedMessage","setReceivedMessage","fetchMessage","response","get","encryptedMessage","data","split","map","Number","decryptedData","window","crypto","subtle","decrypt","name","Uint8Array","from","decryptedMessage","TextDecoder","decode","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/NIBM/Project/React/Legal Case Management System/LawBridge/src/components/ReceiveMessage.js"],"sourcesContent":["// ReceiveMessage.js\r\nimport React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst ReceiveMessage = () => {\r\n  const [receivedMessage, setReceivedMessage] = useState('');\r\n\r\n  useEffect(() => {\r\n    const fetchMessage = async () => {\r\n      try {\r\n        const response = await axios.get('http://localhost:5000/api/receive-message');\r\n        const encryptedMessage = response.data.encryptedMessage.split(',').map(Number);\r\n        const decryptedData = await window.crypto.subtle.decrypt({ name: 'AES-GCM' }, 'secretKey', Uint8Array.from(encryptedMessage));\r\n        const decryptedMessage = new TextDecoder().decode(decryptedData);\r\n        setReceivedMessage(decryptedMessage);\r\n      } catch (error) {\r\n        console.error('Error fetching message:', error);\r\n      }\r\n    };\r\n\r\n    fetchMessage();\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      {receivedMessage ? (\r\n        <div>\r\n          <h3>Received Message</h3>\r\n          <p>{receivedMessage}</p>\r\n        </div>\r\n      ) : (\r\n        <p>No message received</p>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ReceiveMessage;\r\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,cAAc,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC3B,MAAM,CAACC,eAAe,EAAEC,kBAAkB,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAE1DC,SAAS,CAAC,MAAM;IACd,MAAMQ,YAAY,GAAG,MAAAA,CAAA,KAAY;MAC/B,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMR,KAAK,CAACS,GAAG,CAAC,2CAA2C,CAAC;QAC7E,MAAMC,gBAAgB,GAAGF,QAAQ,CAACG,IAAI,CAACD,gBAAgB,CAACE,KAAK,CAAC,GAAG,CAAC,CAACC,GAAG,CAACC,MAAM,CAAC;QAC9E,MAAMC,aAAa,GAAG,MAAMC,MAAM,CAACC,MAAM,CAACC,MAAM,CAACC,OAAO,CAAC;UAAEC,IAAI,EAAE;QAAU,CAAC,EAAE,WAAW,EAAEC,UAAU,CAACC,IAAI,CAACZ,gBAAgB,CAAC,CAAC;QAC7H,MAAMa,gBAAgB,GAAG,IAAIC,WAAW,CAAC,CAAC,CAACC,MAAM,CAACV,aAAa,CAAC;QAChET,kBAAkB,CAACiB,gBAAgB,CAAC;MACtC,CAAC,CAAC,OAAOG,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;MACjD;IACF,CAAC;IAEDnB,YAAY,CAAC,CAAC;EAChB,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEL,OAAA;IAAA0B,QAAA,EACGvB,eAAe,gBACdH,OAAA;MAAA0B,QAAA,gBACE1B,OAAA;QAAA0B,QAAA,EAAI;MAAgB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACzB9B,OAAA;QAAA0B,QAAA,EAAIvB;MAAe;QAAAwB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACrB,CAAC,gBAEN9B,OAAA;MAAA0B,QAAA,EAAG;IAAmB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG;EAC1B;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAAC5B,EAAA,CA/BID,cAAc;AAAA8B,EAAA,GAAd9B,cAAc;AAiCpB,eAAeA,cAAc;AAAC,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}