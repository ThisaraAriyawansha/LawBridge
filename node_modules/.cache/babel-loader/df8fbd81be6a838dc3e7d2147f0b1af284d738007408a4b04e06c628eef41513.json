{"ast":null,"code":"var _jsxFileName = \"D:\\\\NIBM\\\\Project\\\\React\\\\Legal Case Management System\\\\LawBridge\\\\src\\\\components\\\\CalendarView.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Calendar from 'react-calendar';\nimport 'react-calendar/dist/Calendar.css';\nimport './CalendarView.css';\nimport Navbar from './Navbar';\nimport Footer from './Footer';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CalendarView = () => {\n  _s();\n  const [appointments, setAppointments] = useState([]);\n  const [date, setDate] = useState(new Date());\n  useEffect(() => {\n    fetchAppointments();\n  }, []);\n  const fetchAppointments = async () => {\n    try {\n      const response = await fetch('http://localhost:5000/api/appointments');\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n      const data = await response.json();\n      setAppointments(data);\n    } catch (error) {\n      console.error('Error fetching appointments:', error);\n    }\n  };\n  const tileClassName = ({\n    date,\n    view\n  }) => {\n    if (view === 'month') {\n      const dateString = date.toISOString().split('T')[0];\n      const appointmentDates = appointments.map(appointment => new Date(appointment.appointment_date).toISOString().split('T')[0]);\n      if (appointmentDates.includes(dateString)) {\n        return 'booked';\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Appointment Calendar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Calendar, {\n        onChange: setDate,\n        value: date,\n        tileClassName: tileClassName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"appointment-details\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [\"Appointments on \", date.toDateString()]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: appointments.filter(appointment => new Date(appointment.appointment_date).toISOString().split('T')[0] === date.toISOString().split('T')[0]).map((appointment, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [appointment.client_name, \" at \", new Date(appointment.appointment_date).toLocaleTimeString([], {\n              hour: '2-digit',\n              minute: '2-digit'\n            })]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 33\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 9\n  }, this);\n};\n_s(CalendarView, \"9uCzOraSD4zGoXlDlyBxS7z9kkQ=\");\n_c = CalendarView;\nexport default CalendarView;\nvar _c;\n$RefreshReg$(_c, \"CalendarView\");","map":{"version":3,"names":["React","useState","useEffect","Calendar","Navbar","Footer","jsxDEV","_jsxDEV","CalendarView","_s","appointments","setAppointments","date","setDate","Date","fetchAppointments","response","fetch","ok","Error","data","json","error","console","tileClassName","view","dateString","toISOString","split","appointmentDates","map","appointment","appointment_date","includes","children","fileName","_jsxFileName","lineNumber","columnNumber","onChange","value","className","toDateString","filter","index","client_name","toLocaleTimeString","hour","minute","_c","$RefreshReg$"],"sources":["D:/NIBM/Project/React/Legal Case Management System/LawBridge/src/components/CalendarView.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport Calendar from 'react-calendar';\r\nimport 'react-calendar/dist/Calendar.css';\r\nimport './CalendarView.css';\r\nimport Navbar from './Navbar';\r\nimport Footer from './Footer';\r\n\r\nconst CalendarView = () => {\r\n    const [appointments, setAppointments] = useState([]);\r\n    const [date, setDate] = useState(new Date());\r\n\r\n    useEffect(() => {\r\n        fetchAppointments();\r\n    }, []);\r\n\r\n    const fetchAppointments = async () => {\r\n        try {\r\n            const response = await fetch('http://localhost:5000/api/appointments');\r\n            if (!response.ok) {\r\n                throw new Error('Network response was not ok');\r\n            }\r\n            const data = await response.json();\r\n            setAppointments(data);\r\n        } catch (error) {\r\n            console.error('Error fetching appointments:', error);\r\n        }\r\n    };\r\n\r\n    const tileClassName = ({ date, view }) => {\r\n        if (view === 'month') {\r\n            const dateString = date.toISOString().split('T')[0];\r\n            const appointmentDates = appointments.map(appointment => new Date(appointment.appointment_date).toISOString().split('T')[0]);\r\n            if (appointmentDates.includes(dateString)) {\r\n                return 'booked';\r\n            }\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <Navbar />\r\n            <div>\r\n                <h2>Appointment Calendar</h2>\r\n                <Calendar\r\n                    onChange={setDate}\r\n                    value={date}\r\n                    tileClassName={tileClassName}\r\n                />\r\n                <div className=\"appointment-details\">\r\n                    <h3>Appointments on {date.toDateString()}</h3>\r\n                    <ul>\r\n                        {appointments\r\n                            .filter(appointment => new Date(appointment.appointment_date).toISOString().split('T')[0] === date.toISOString().split('T')[0])\r\n                            .map((appointment, index) => (\r\n                                <li key={index}>\r\n                                    {appointment.client_name} at {new Date(appointment.appointment_date).toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' })}\r\n                                </li>\r\n                            ))\r\n                        }\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n            <Footer />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default CalendarView;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}