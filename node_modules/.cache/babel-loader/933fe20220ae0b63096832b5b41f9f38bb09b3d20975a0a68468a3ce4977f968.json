{"ast":null,"code":"var _jsxFileName = \"D:\\\\NIBM\\\\Project\\\\React\\\\Legal Case Management System\\\\src\\\\components\\\\PieChart.js\",\n  _s = $RefreshSig$();\n// PieChart.js\n\nimport React, { useState, useEffect } from 'react';\nimport { Pie } from 'react-chartjs-2';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PieChart = () => {\n  _s();\n  const [chartData, setChartData] = useState(null);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    fetch('/api/piechartdata').then(response => {\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n      return response.json();\n    }).then(data => {\n      console.log('Fetched data:', data); // Log the data received\n\n      if (!Array.isArray(data) || data.length === 0) {\n        throw new Error('Invalid data format or empty data');\n      }\n\n      // Process the data and format it for the chart\n      const labels = data.map(item => item.label);\n      const values = data.map(item => item.value);\n      setChartData({\n        labels: labels,\n        datasets: [{\n          label: 'Case Types',\n          data: values,\n          backgroundColor: ['#FF6384', '#36A2EB', '#FFCE56'],\n          hoverBackgroundColor: ['#FF6384', '#36A2EB', '#FFCE56']\n        }]\n      });\n    }).catch(error => {\n      console.error('Error fetching data:', error);\n      setError(error.message);\n    });\n  }, []);\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Error: \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 12\n    }, this);\n  }\n  if (!chartData) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Case Distribution\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Pie, {\n      data: chartData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n};\n_s(PieChart, \"IFJj7nSJvcbvx2I/MLqJX73o+2w=\");\n_c = PieChart;\nexport default PieChart;\nvar _c;\n$RefreshReg$(_c, \"PieChart\");","map":{"version":3,"names":["React","useState","useEffect","Pie","jsxDEV","_jsxDEV","PieChart","_s","chartData","setChartData","error","setError","fetch","then","response","ok","Error","json","data","console","log","Array","isArray","length","labels","map","item","label","values","value","datasets","backgroundColor","hoverBackgroundColor","catch","message","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/NIBM/Project/React/Legal Case Management System/src/components/PieChart.js"],"sourcesContent":["// PieChart.js\r\n\r\nimport React, { useState, useEffect } from 'react';\r\nimport { Pie } from 'react-chartjs-2';\r\n\r\nconst PieChart = () => {\r\n  const [chartData, setChartData] = useState(null);\r\n  const [error, setError] = useState(null);\r\n\r\n  useEffect(() => {\r\n    fetch('/api/piechartdata')\r\n      .then((response) => {\r\n        if (!response.ok) {\r\n          throw new Error('Network response was not ok');\r\n        }\r\n        return response.json();\r\n      })\r\n      .then((data) => {\r\n        console.log('Fetched data:', data); // Log the data received\r\n\r\n        if (!Array.isArray(data) || data.length === 0) {\r\n          throw new Error('Invalid data format or empty data');\r\n        }\r\n\r\n        // Process the data and format it for the chart\r\n        const labels = data.map((item) => item.label);\r\n        const values = data.map((item) => item.value);\r\n\r\n        setChartData({\r\n          labels: labels,\r\n          datasets: [\r\n            {\r\n              label: 'Case Types',\r\n              data: values,\r\n              backgroundColor: ['#FF6384', '#36A2EB', '#FFCE56'],\r\n              hoverBackgroundColor: ['#FF6384', '#36A2EB', '#FFCE56'],\r\n            },\r\n          ],\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        console.error('Error fetching data:', error);\r\n        setError(error.message);\r\n      });\r\n  }, []);\r\n\r\n  if (error) {\r\n    return <div>Error: {error}</div>;\r\n  }\r\n\r\n  if (!chartData) {\r\n    return <div>Loading...</div>;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h2>Case Distribution</h2>\r\n      <Pie data={chartData} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PieChart;\r\n"],"mappings":";;AAAA;;AAEA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,GAAG,QAAQ,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtC,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrB,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC;EAChD,MAAM,CAACS,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EAExCC,SAAS,CAAC,MAAM;IACdU,KAAK,CAAC,mBAAmB,CAAC,CACvBC,IAAI,CAAEC,QAAQ,IAAK;MAClB,IAAI,CAACA,QAAQ,CAACC,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAC,6BAA6B,CAAC;MAChD;MACA,OAAOF,QAAQ,CAACG,IAAI,CAAC,CAAC;IACxB,CAAC,CAAC,CACDJ,IAAI,CAAEK,IAAI,IAAK;MACdC,OAAO,CAACC,GAAG,CAAC,eAAe,EAAEF,IAAI,CAAC,CAAC,CAAC;;MAEpC,IAAI,CAACG,KAAK,CAACC,OAAO,CAACJ,IAAI,CAAC,IAAIA,IAAI,CAACK,MAAM,KAAK,CAAC,EAAE;QAC7C,MAAM,IAAIP,KAAK,CAAC,mCAAmC,CAAC;MACtD;;MAEA;MACA,MAAMQ,MAAM,GAAGN,IAAI,CAACO,GAAG,CAAEC,IAAI,IAAKA,IAAI,CAACC,KAAK,CAAC;MAC7C,MAAMC,MAAM,GAAGV,IAAI,CAACO,GAAG,CAAEC,IAAI,IAAKA,IAAI,CAACG,KAAK,CAAC;MAE7CpB,YAAY,CAAC;QACXe,MAAM,EAAEA,MAAM;QACdM,QAAQ,EAAE,CACR;UACEH,KAAK,EAAE,YAAY;UACnBT,IAAI,EAAEU,MAAM;UACZG,eAAe,EAAE,CAAC,SAAS,EAAE,SAAS,EAAE,SAAS,CAAC;UAClDC,oBAAoB,EAAE,CAAC,SAAS,EAAE,SAAS,EAAE,SAAS;QACxD,CAAC;MAEL,CAAC,CAAC;IACJ,CAAC,CAAC,CACDC,KAAK,CAAEvB,KAAK,IAAK;MAChBS,OAAO,CAACT,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;MAC5CC,QAAQ,CAACD,KAAK,CAACwB,OAAO,CAAC;IACzB,CAAC,CAAC;EACN,CAAC,EAAE,EAAE,CAAC;EAEN,IAAIxB,KAAK,EAAE;IACT,oBAAOL,OAAA;MAAA8B,QAAA,GAAK,SAAO,EAACzB,KAAK;IAAA;MAAA0B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC;EAClC;EAEA,IAAI,CAAC/B,SAAS,EAAE;IACd,oBAAOH,OAAA;MAAA8B,QAAA,EAAK;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EAC9B;EAEA,oBACElC,OAAA;IAAA8B,QAAA,gBACE9B,OAAA;MAAA8B,QAAA,EAAI;IAAiB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC1BlC,OAAA,CAACF,GAAG;MAACe,IAAI,EAAEV;IAAU;MAAA4B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACrB,CAAC;AAEV,CAAC;AAAChC,EAAA,CAvDID,QAAQ;AAAAkC,EAAA,GAARlC,QAAQ;AAyDd,eAAeA,QAAQ;AAAC,IAAAkC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}