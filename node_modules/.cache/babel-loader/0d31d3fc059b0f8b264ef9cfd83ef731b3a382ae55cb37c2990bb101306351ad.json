{"ast":null,"code":"var _jsxFileName = \"D:\\\\NIBM\\\\Project\\\\React\\\\Legal Case Management System\\\\LawBridge\\\\src\\\\components\\\\CalendarView.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Calendar from 'react-calendar';\nimport 'react-calendar/dist/Calendar.css';\nimport './CalendarView.css';\nimport Navbar from './Navbar';\nimport Footer from './Footer';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CalendarView = () => {\n  _s();\n  const [appointments, setAppointments] = useState([]);\n  const [date, setDate] = useState(new Date());\n  useEffect(() => {\n    // Fetch appointments from your backend or use a mock function\n    fetchAppointments();\n  }, []);\n  const fetchAppointments = async () => {\n    // Replace with actual fetch call to your backend\n    const data = [{\n      client_name: \"John Doe\",\n      appointment_date: \"2023-06-10T10:00:00\"\n    }, {\n      client_name: \"Jane Smith\",\n      appointment_date: \"2023-06-15T14:00:00\"\n    }];\n    setAppointments(data);\n  };\n  const tileClassName = ({\n    date,\n    view\n  }) => {\n    if (view === 'month') {\n      const dateString = date.toISOString().split('T')[0];\n      const appointmentDates = appointments.map(appointment => appointment.appointment_date.split('T')[0]);\n      if (appointmentDates.includes(dateString)) {\n        return 'booked';\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Appointment Calendar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Calendar, {\n        onChange: setDate,\n        value: date,\n        tileClassName: tileClassName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"appointment-details\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [\"Appointments on \", date.toDateString()]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: appointments.filter(appointment => appointment.appointment_date.split('T')[0] === date.toISOString().split('T')[0]).map((appointment, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [appointment.client_name, \" at \", new Date(appointment.appointment_date).toLocaleTimeString()]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 9\n  }, this);\n};\n_s(CalendarView, \"9uCzOraSD4zGoXlDlyBxS7z9kkQ=\");\n_c = CalendarView;\nexport default CalendarView;\nvar _c;\n$RefreshReg$(_c, \"CalendarView\");","map":{"version":3,"names":["React","useState","useEffect","Calendar","Navbar","Footer","jsxDEV","_jsxDEV","CalendarView","_s","appointments","setAppointments","date","setDate","Date","fetchAppointments","data","client_name","appointment_date","tileClassName","view","dateString","toISOString","split","appointmentDates","map","appointment","includes","children","fileName","_jsxFileName","lineNumber","columnNumber","onChange","value","className","toDateString","filter","index","toLocaleTimeString","_c","$RefreshReg$"],"sources":["D:/NIBM/Project/React/Legal Case Management System/LawBridge/src/components/CalendarView.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport Calendar from 'react-calendar';\r\nimport 'react-calendar/dist/Calendar.css';\r\nimport './CalendarView.css'; \r\nimport Navbar from './Navbar';\r\nimport Footer from './Footer';\r\n\r\nconst CalendarView = () => {\r\n    const [appointments, setAppointments] = useState([]);\r\n    const [date, setDate] = useState(new Date());\r\n\r\n    useEffect(() => {\r\n        // Fetch appointments from your backend or use a mock function\r\n        fetchAppointments();\r\n    }, []);\r\n\r\n    const fetchAppointments = async () => {\r\n        // Replace with actual fetch call to your backend\r\n        const data = [\r\n            { client_name: \"John Doe\", appointment_date: \"2023-06-10T10:00:00\" },\r\n            { client_name: \"Jane Smith\", appointment_date: \"2023-06-15T14:00:00\" }\r\n        ];\r\n        setAppointments(data);\r\n    };\r\n\r\n    const tileClassName = ({ date, view }) => {\r\n        if (view === 'month') {\r\n            const dateString = date.toISOString().split('T')[0];\r\n            const appointmentDates = appointments.map(appointment => appointment.appointment_date.split('T')[0]);\r\n            if (appointmentDates.includes(dateString)) {\r\n                return 'booked';\r\n            }\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <Navbar/>\r\n        <div>\r\n            <h2>Appointment Calendar</h2>\r\n            <Calendar\r\n                onChange={setDate}\r\n                value={date}\r\n                tileClassName={tileClassName}\r\n            />\r\n            <div className=\"appointment-details\">\r\n                <h3>Appointments on {date.toDateString()}</h3>\r\n                <ul>\r\n                    {appointments\r\n                        .filter(appointment => appointment.appointment_date.split('T')[0] === date.toISOString().split('T')[0])\r\n                        .map((appointment, index) => (\r\n                            <li key={index}>\r\n                                {appointment.client_name} at {new Date(appointment.appointment_date).toLocaleTimeString()}\r\n                            </li>\r\n                        ))\r\n                    }\r\n                </ul>\r\n            </div>\r\n        </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default CalendarView;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}